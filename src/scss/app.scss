@import 'semantic-ui/globals/_variables';

body {
  background: #fafafa;
  font-size: 14px;
  font-weight: 300;
  color: #444;

  // avoid jarring displacement when modal appears
  // or when search results cause page to lengthen
  overflow-y: scroll !important;
}

a {
  cursor: pointer !important;
}
a.teal {
  color: $teal !important;
}
a.teal:hover {
  color: $teal-highlight !important;
}


.main-container {
  padding-top: 35px;
}

/* Top Navigation Menu */
.top-nav {
  margin-bottom: 30px !important;
}
.top-nav > .item {
  font-weight: 600 !important;
}
.top-nav > .logo {
  margin-top: -20px !important;
  padding: 0 55px 0 35px !important;
  /* no hover bg change */
  background: inherit !important;
}
.top-nav > .logo img {
  height: 60px !important;
  width: 140px !important;
}
.top-nav > .logo img:hover {
  animation-timing-function: linear;
  animation: 1s infinite party;
}
@keyframes party {
  0% {
    filter: hue-rotate(0);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

/* used by:
 *   Preposals & Preposal Detail */
.container-with-sidebar {
  display: flex;
  flex-direction: row;
}
.container-with-sidebar > .inner-container {
  flex: 1;
  margin-top: 0 !important;
}
.sidebar {
  width: $sidebar-width;
  margin-right: $sidebar-margin-right;
  font-weight: 400 !important;
}
@media only screen and (min-width: 768px) {
  .container-with-sidebar:not(.round-details) .sidebar {  
    position: sticky;
    top: 14px;
    // To effect the "sticky" position the way we want,
    // we need to set the height, which we could do with
    // height: min-content. However, display: table has the
    // same side effect, and it has better browser support.
    display: table;
  }
}
.sidebar > .checkbox {
  display: block;
  margin-bottom: 7px;
}
.sidebar > .checkbox > label {
  font-size: 12px;
  font-weight: 300;
}
.sidebar .back-button {
  box-shadow: 0 0px 1px 0 rgba(50, 50, 50, 0.7) !important;
}
.sidebar .segment {
  box-shadow: 0 2px 14px 0 rgba(50,50,50,0.1) !important;
  border: none !important;
}
.sidebar .segment > .button:not(:first-of-type),
.sidebar .segment > .label {
  margin-top: $segment-padding;
}

.product-title {
  padding: 0 180px 14px 0 !important;
  margin: 0;
  font-size: 30px;
}
.display-field {
  margin: 7px 0 7px 0 !important;
  padding: 0 !important;
  border-bottom: none !important;
}
.display-field ul {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  padding-left: 18px !important;
}
.display-field-key {
  margin: 0 0 5px 0 !important;
}
.detail-container {
  box-shadow: 0 2px 14px 0 rgba(50,50,50,0.1) !important;
  border: none !important;
}
.detail-container > .product-logo {
  position: absolute;
  right: 0px;
  top: 0px;
  width: 80px;
  margin: 15px 15px 0px 0px;
}

@media only screen and (max-width: 600px) {
  .container-with-sidebar {
    display: flex;
    flex-direction: column;
  }
  .sidebar {
    width: 100%;
    margin: 15px auto;
  } 
  .detail-container > .product-logo {
    display: none !important;
  }
  .product-title {
    padding: 0 7px 7px 0 !important;
  }
}

.missing-data {
  .display-field-key, .display-field-value {
    opacity: 0.2;
    transition: opacity 0.3s 0.3s linear, filter 0.3s 0s linear, color 0.3s 0.3s linear;
    cursor: default;
  }
  .button {
    position: absolute;
    top: 0;
    display: none;
  }
}
// a class that gets added via js when one of the missing data
// elements is hovered.
.missing-data-hovering {
  .display-field.missing-data {
    .display-field-key, .display-field-value {
      // filter: blur(4px);
      // filter: brightness(2);
      opacity: 0.8;
      color: rgb(66, 177, 179);
    }
    &:hover {
      .display-field-key, .display-field-value {
        filter: blur(7px);
      }
      .button {
        display: block;
      }
    }
  }
}

/* Product Profile and Vendor Profile (under Product detail and Preposal detail) */
.profile .title {
  padding: 0 11px 13px 0 !important;
  margin: 0;
  font-size: 24px;
}
.profile .row {
  padding-top: 7px !important;
}


.round-details .round-status {
  box-shadow: 0 0px 1px 0 rgba(50, 50, 50, 0.7) !important;
  border: none;
}

/* to make segment look the same as item results */
/* .segment { */
/*   padding: 15px 12px !important; */
/*   background: #fff !important; */
/*   box-shadow: 0 1px 3px 0 rgba(0,0,0,0.08), 0 2px 14px 0 rgba(50,50,93,0.14) !important; */
/*   border-radius: 8px !important; */
/* } */


/* Products & Categories page */
.product-search {
  width: 100%;
}


/* Search Results
 * used by: Preposals page
 *          Products & Categories page
 */
.results > .item  {
  padding: 15px !important;
  background: #fff !important;
  box-shadow: 0 2px 14px 0 rgba(50,50,50,0.1) !important;
  border-radius: 8px !important;
  transition: transform .3s ease-out !important;
  cursor: pointer !important;
  /* HACK to fix bug that hides 'ribbon' labels */
  transform: translate(0) !important;
}
.results > .item:hover  {
  transform: translate(0, -1px) !important;
  box-shadow: 0 3px 21px 0 rgba(50,50,50,0.26) !important;
  transition: all .05s ease-out !important;
}
.results > .item > .product-logo {
  min-width: 128px;
  min-height: 128px;
  max-width: 128px;
  max-height: 128px;
  margin-right: 15px;
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
}
.results > .item > .content {
  display: flex !important;
  flex-direction: column !important;
}
.results > .item > .content > .description {
  flex: 1 !important;
}
.results > .item > .content > .extra > .category-tag {
  margin-top: 11px; /* todo: this is kind of hacky */
}
.free-trial-tag {
  margin-left: 15px !important;
}

.categories {
  margin-bottom: 20px;
}
.category-search-result {
  width: 100%;
  text-align: center;
  margin-bottom: 15px;
}


/* Override basic Semantic UI behavior */
.ui.fluid[class*="left labeled"].icon.button {
  padding-left: 44px !important;
  padding-right: 0px !important;
  text-align: left !important;
}
i.icon.vetd {
  width: 50px !important;
  height: 50px !important;
  background-image: url(../images/vetd-arrow.svg) !important;
  background-size: contain !important;
  background-position: center !important;
  background-repeat: no-repeat !important;
  filter: grayscale(1) brightness(0.6);
}
i.icon.vetd-icon:before {
  content: " " !important;
  width: 100%;
  background-image: url(../images/vetd-arrow.svg) !important;
  background-size: 13px !important;
  background-position: center !important;
  background-repeat: no-repeat !important;
  height: 100%;
  filter: brightness(100);
}
.start-round-button:hover i.icon.vetd-icon:before {
  // animation-timing-function: linear;
  // animation: 1s infinite party;
}


.borderless > input {
  border: none !important;
  box-shadow: 0 2px 10px 0 rgba(50, 50, 50, 0.08) !important;
}


/* Miscellaneous */
.category-tag {
  background: #fff !important;
  border: 1px solid #ddd !important;
  font-weight: 400 !important
}
a.category-tag:hover {
  border-color: #777 !important;
}
textarea {
  font-family: inherit;
}

/* Toast Messages (toastr library) */
#toast-container .toast-success {
  background-color: $teal;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  opacity: 1;
}
#toast-container .toast-title,
#toast-container .toast-message {
  color: #fff;
}


/* login and signup form */
.centerpiece {
  width: 265px;
  margin: 0 auto;
  padding-top: 30px;
  text-align: center;
}
.centerpiece .logo {
  display: block;
  width: 210px;
  margin: 0 auto 40px auto;
  /* logo design is weighted a little right */
  position: relative;
  left: -5px;
}


/* Round Initiation Form */
.ui.form.round-initiation-form {
  margin-top: 20px;

  > .field,
  > .fields {
    margin-top: 15px;
  }
}

/* Round Grid */
$cell-width: 210px;
$cell-height: 201px;

.round-grid {
  display: flex;
  flex-wrap: nowrap; // unnecessary?
  overflow-x: auto;
  overflow-y: hidden;
  box-sizing: border-box;
  position: relative;
  padding-top: 14px;
  // since the requirements are fixed position
  // this keeps them from overflowing
  clip-path: inset(-100px 0px 0px 0px);

  .column {
    width: $cell-width;
    flex: 0 0 auto;
    transition: transform 0.3s 0s ease-out;
    
    &:first-of-type {
      margin-left: 6px;
    }
    &.reordering {
      transition: none;
      z-index: 999;

      .requirement, .cell {
        transition: transform 0.1s 0s linear !important;
        transform: rotate(4deg);
      }
    }
    &.reordering-left {
      .requirement, .cell {
        transform: rotate(-4deg);
      }
    }
    .requirement {
      width: $cell-width - 7px;
      height: 38px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      background: white;
      box-shadow: 0 2px 14px 0 rgba(50,50,50,0.1) !important;
      border-radius: 4px;
      font-size: 14px;
      padding: 0 7px;
      cursor: grab;
      user-select: none; 
    }
  }
  
  .cell {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: $cell-height;
    padding: 14px;
    margin: 14px 7px 14px 0;
    box-shadow: 0 2px 14px 0 rgba(50,50,50,0.1) !important;
    border: none !important;
    border-radius: 4px;
    background: #fff;
    font-size: 14px;
    font-weight: 400;
    transition: transform .05s ease-out;
    transform: scale(0.98);

    .text {
      flex: 1;
      display: flex;
      flex-direction: column;
      justify-content: center;
      text-align: center;
      padding-top: 14px;
    }
    .actions {
      margin-top: 10px;

      .action-button {
        opacity: 0.3;
        transition: opacity .05s ease-out !important;
      }
    }
    
    
    &:hover {
      transform: scale(1);
      
      .action-button {
        opacity: 1;
      }
    }
    &.disqualified {
      opacity: 0.35;
    }
    &.response-approved {
      // box-shadow: 0 1px 3px 0 rgba(0,150,0,0.7) !important;
      // border: 1px solid rgb(0, 150, 0) !important;

      .approve {
        opacity: 1;

        box-shadow: 0 0 0px 1px #4ec2c4; //rgba(0, 150, 0, 0.8);
        color: #4ec2c4 !important;
      }
    }
    &.response-disapproved {
      // box-shadow: 0 1px 10px 0 rgba(190,0,0,0.7) !important;
      // border: 1px solid rgb(150, 0, 0) !important;
      // background: rgba(255,220,220,1);
      // transform: rotateY(190deg);
      // perspective-origin: 0 0;

      .disapprove {
        opacity: 1;

        // option 1
        // background: rgba(230, 0, 0, 0.7) !important;
        // color: white !important;

        // option 2
        box-shadow: 0 0 0px 1px rgba(230, 0, 20, 0.8);
        color: rgba(230, 0, 0, 0.8) !important;
      }
    }
  }

  // draggable has to do with dragging to *scroll* (not to reorder)
  &.draggable {
    cursor: ew-resize;

    &.dragging,
    &.dragging .requirement,
    &.dragging .cell, {
      cursor: grabbing;
    }
  }
  &:not(.draggable) {
    .cell {
      cursor: pointer;
    }
  }
  // if the requirements header is in sticky mode
  &.fixed {
    margin-top: 38px;
  }
  &.fixed .requirement {
    position: fixed;
    top: 0;
    z-index: 999;
    background: white;
    box-shadow: 0 2px 14px 0 rgba(50,50,50,0.1) !important;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
  // &:hover .column:not(:hover) {
  //   opacity: 0.6;
  // }
}

#round-title-container {
  margin-left: 20px;
  
  .title {
    margin-top: 0;
    font-size: 28px;
    line-height: 36px;
  }

  &.long {
    .title {
      font-size: 16px;
      line-height: 36px;
    }
  }
}
#round-status-container {
  margin-left: 20px;
  margin-bottom: 0;
}
.round-product {

  .name {
    display: block;
    height: 37px;
    font-size: 18px !important;
    font-weight: 600 !important;
    line-height: 23px !important;
    color: #444 !important;

    &:hover {
      color: #888 !important;
    }
  }

  &.long {
    padding-top: 8px;
    
    .name {
      font-size: 14px !important;
      margin-bottom: 7px !important;
    }
  }

  &.disqualified {

    .name {
      opacity: 0.5;
    }
  }

  &.winner {
    background: linear-gradient(to right, #32abde, #6dccce) !important;

    .name {
      color: white !important;
    }
  }
}

/* Loading Spinner */
div.spinner {
  animation: rotate 5s infinite ease;
  position: relative;
  display: block;
  margin: auto;
  width: 142px;
  height: 142px;
}
div.spinner i {
  animation: rotate 3s infinite cubic-bezier(0.09, 0.3, 0.7, 0.03);
  transform-origin: 50% 100% 0;
  position: absolute;
  display: inline-block;
  top: 50%;
  left: 50%;
  border: solid 6px transparent;
  border-bottom: none;
}
div.spinner i:nth-child(1) {
  animation-timing-function: cubic-bezier(0.09, 0.3, 0.12, 0.03);
  width: 44px;
  height: 22px;
  margin-top: -22px;
  margin-left: -22px;
  border-color: #4ec2c4;
  border-top-left-radius: 36px;
  border-top-right-radius: 36px;
}
div.spinner i:nth-child(2) {
  animation-timing-function: cubic-bezier(0.09, 0.6, 0.24, 0.03);
  width: 58px;
  height: 29px;
  margin-top: -29px;
  margin-left: -29px;
  border-color: #32abde;
  border-top-left-radius: 42px;
  border-top-right-radius: 42px;
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}


.error.form {
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

#confetti-canvas {
  position: fixed;
  top: 0px;
}
